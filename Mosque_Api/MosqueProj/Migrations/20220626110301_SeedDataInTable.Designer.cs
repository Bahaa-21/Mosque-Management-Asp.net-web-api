// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MosqueProj.Data;

namespace MosqueProj.Migrations
{
    [DbContext(typeof(MosqueDbContext))]
    [Migration("20220626110301_SeedDataInTable")]
    partial class SeedDataInTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MosqueProj.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte>("Max_Old")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Min_Old")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Max_Old = (byte)15,
                            Min_Old = (byte)10,
                            NameGroup = "أبو بكر الصديق",
                            YearId = 1
                        },
                        new
                        {
                            Id = 2,
                            Max_Old = (byte)22,
                            Min_Old = (byte)20,
                            NameGroup = "الفاروق",
                            YearId = 1
                        },
                        new
                        {
                            Id = 3,
                            Max_Old = (byte)13,
                            Min_Old = (byte)10,
                            NameGroup = "عثمان بن عفان",
                            YearId = 2
                        });
                });

            modelBuilder.Entity("MosqueProj.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint");

                    b.Property<int>("CountOfAbsenceDay")
                        .HasColumnType("int");

                    b.Property<int>("CountPage")
                        .HasColumnType("int");

                    b.Property<string>("Father_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MosqueProj.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name_Subject")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_Subject = "قرآن"
                        },
                        new
                        {
                            Id = 2,
                            Name_Subject = "حديث"
                        },
                        new
                        {
                            Id = 3,
                            Name_Subject = "فقه"
                        },
                        new
                        {
                            Id = 4,
                            Name_Subject = "عقيدة"
                        },
                        new
                        {
                            Id = 5,
                            Name_Subject = "تفسير"
                        },
                        new
                        {
                            Id = 6,
                            Name_Subject = "سيرة"
                        });
                });

            modelBuilder.Entity("MosqueProj.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CountOfAbsenceDay")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.HasIndex("SubjectId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountOfAbsenceDay = 0,
                            Email = "b.com",
                            First_Name = "بهاء الدين",
                            GroupId = 1,
                            Last_Name = "عاتكة",
                            Password = "atk12345",
                            Phone = "0951584338",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            CountOfAbsenceDay = 2,
                            Email = "bilal.com",
                            First_Name = "بلال",
                            GroupId = 2,
                            Last_Name = "تللو",
                            Password = "bilal123456",
                            Phone = "0997185168",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            CountOfAbsenceDay = 3,
                            Email = "ahmad.com",
                            First_Name = "أحمد",
                            GroupId = 3,
                            Last_Name = "Samer",
                            Password = "ahmad12345",
                            Phone = "0968522506",
                            SubjectId = 3
                        });
                });

            modelBuilder.Entity("MosqueProj.Models.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("YearDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            YearDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            YearDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            YearDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TeacherYear", b =>
                {
                    b.Property<int>("TeachersId")
                        .HasColumnType("int");

                    b.Property<int>("YearsId")
                        .HasColumnType("int");

                    b.HasKey("TeachersId", "YearsId");

                    b.HasIndex("YearsId");

                    b.ToTable("TeacherYear");
                });

            modelBuilder.Entity("MosqueProj.Models.Group", b =>
                {
                    b.HasOne("MosqueProj.Models.Year", null)
                        .WithMany("Groups")
                        .HasForeignKey("YearId");
                });

            modelBuilder.Entity("MosqueProj.Models.Student", b =>
                {
                    b.HasOne("MosqueProj.Models.Group", "Groups")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("MosqueProj.Models.Teacher", b =>
                {
                    b.HasOne("MosqueProj.Models.Group", "Groups")
                        .WithOne("Teachers")
                        .HasForeignKey("MosqueProj.Models.Teacher", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MosqueProj.Models.Subject", "Subjects")
                        .WithMany("Teachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("TeacherYear", b =>
                {
                    b.HasOne("MosqueProj.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MosqueProj.Models.Year", null)
                        .WithMany()
                        .HasForeignKey("YearsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MosqueProj.Models.Group", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("MosqueProj.Models.Subject", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("MosqueProj.Models.Year", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
